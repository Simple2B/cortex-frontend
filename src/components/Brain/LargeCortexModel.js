/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function LargeCortexModel(props) {
  const groupCortexModel = useRef();
  const { nodes, materials } = useGLTF("/mediumModel.glb");
  return (
    <group ref={groupCortexModel} {...props} dispose={null}>
      <group>
        <group
          name="mid"
          position={[-0.01, -0.01, 0]}
          scale={0}
          userData={{ name: "mid" }}
        >
          <mesh
            name="mid-Mat"
            castShadow
            receiveShadow
            geometry={nodes["mid-Mat"].geometry}
            material={nodes["mid-Mat"].material}
            userData={{ name: "mid-Mat" }}
          />
        </group>
        <group
          name="Right"
          position={[-0.01, -0.01, 0]}
          scale={0}
          userData={{ name: "Right" }}
        >
          <mesh
            name="Occipital_lope"
            castShadow
            receiveShadow
            geometry={nodes.Occipital_lope.geometry}
            material={nodes.Occipital_lope.material}
            userData={{ name: "Occipital lope" }}
          />
          <mesh
            name="Temporal_lope"
            castShadow
            receiveShadow
            geometry={nodes.Temporal_lope.geometry}
            material={nodes.Temporal_lope.material}
            userData={{ name: "Temporal lope" }}
          />
          <mesh
            name="Parietal_lope"
            castShadow
            receiveShadow
            geometry={nodes.Parietal_lope.geometry}
            material={nodes.Parietal_lope.material}
            userData={{ name: "Parietal lope" }}
          />
          <mesh
            name="mid_down"
            castShadow
            receiveShadow
            geometry={nodes.mid_down.geometry}
            material={nodes.mid_down.material}
            userData={{ name: "mid down" }}
          />
          <mesh
            name="Frontal_lope"
            castShadow
            receiveShadow
            geometry={nodes.Frontal_lope.geometry}
            material={nodes.Frontal_lope.material}
            userData={{ name: "Frontal lope" }}
          />
        </group>
        <group
          name="Left"
          position={[0.01, -0.01, 0]}
          scale={0}
          userData={{ name: "Left" }}
        >
          <mesh
            name="Occipital_lope_1"
            castShadow
            receiveShadow
            geometry={nodes.Occipital_lope_1.geometry}
            material={nodes.Occipital_lope_1.material}
            userData={{ name: "Occipital lope" }}
          />
          <mesh
            name="Temporal_lope_1"
            castShadow
            receiveShadow
            geometry={nodes.Temporal_lope_1.geometry}
            material={nodes.Temporal_lope_1.material}
            userData={{ name: "Temporal lope" }}
          />
          <mesh
            name="Parietal_lope_1"
            castShadow
            receiveShadow
            geometry={nodes.Parietal_lope_1.geometry}
            material={nodes.Parietal_lope_1.material}
            userData={{ name: "Parietal lope" }}
          />
          <mesh
            name="mid_down_1"
            castShadow
            receiveShadow
            geometry={nodes.mid_down_1.geometry}
            material={nodes.mid_down_1.material}
            userData={{ name: "mid down" }}
          />
          <mesh
            name="Frontal_lope_1"
            castShadow
            receiveShadow
            geometry={nodes.Frontal_lope_1.geometry}
            material={nodes.Frontal_lope_1.material}
            userData={{ name: "Frontal lope" }}
          />
        </group>
        <mesh
          name="Spinal_cord"
          castShadow
          receiveShadow
          geometry={nodes.Spinal_cord.geometry}
          material={nodes.Spinal_cord.material}
          position={[0, -0.01, 0]}
          scale={0}
          userData={{ name: "Spinal cord" }}
        />
        <mesh
          name="Cerebellum"
          castShadow
          receiveShadow
          geometry={nodes.Cerebellum.geometry}
          material={nodes.Cerebellum.material}
          position={[0, -0.01, 0]}
          scale={0}
          userData={{ name: "Cerebellum" }}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/mediumModel.glb");
